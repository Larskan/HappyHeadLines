name: Devops Pipeline

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          include:
            - service: article-service
              folder: ArticleService
            - service: draft-service
              folder: DraftService
            - service: publisher-service
              folder: PublisherService
            - service: comment-service
              folder: CommentService
            - service: subscriber-service
              folder: SubscriberService
            - service: profanity-service
              folder: ProfanityService
            - service: newsletter-service
              folder: NewsletterService
    continue-on-error: true
    env:
      IMAGE_TAG: ${{github.sha}}
      GHCR_REGISTRY: ghcr.io
      GHCR_OWNER: ${{ github.repository_owner }}
      GHCR_PAT: ${{secrets.GHCR_PAT}}
      DOCKER_REGISTRY: happyheadlines
    
    steps:
      #Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

      #Login to GHCR
    - name: Login to GHCR
      run: echo "${{ env.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      #Debug
    - name: List context files
      run: ls -R src/${{matrix.folder}}
    - name: Debug src folder
      run: ls -R src
    - name: Debug Dockerfile paths
      run: |
          ls -l ./src/${{ matrix.folder }}/Dockerfile
          pwd
  
      #Build and push docker images for all services
    - name: Build and push microservices
      uses: docker/build-push-action@v6
      with:
        #Build all microservices in sequence
        push: true
        context: ./
        file: ./src/${{ matrix.folder }}/Dockerfile
        #Args will be overriden in matrix below
        tags: |
            ${{ env.GHCR_REGISTRY }}/larskan/${{ matrix.service }}:${{ env.IMAGE_TAG }}
            ${{ env.GHCR_REGISTRY }}/larskan/${{ matrix.service }}:latest
        cache-from: type=registry,ref=ghcr.io/larskan/${{ matrix.service }}:buildcache,mode=disabled

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    env:
      IMAGE_TAG: ${{github.sha}}
      ARTICLE_DB: ArticleDB
      COMMENT_DB: CommentDB
      DRAFT_DB: DraftDB
      NEWSLETTER_DB: NewsletterDB
      PROFANITY_DB: ProfanityDB
      PUBLISHER_DB: PublisherDB
      SUBSCRIBER_DB: SubscriberDB
      SA_PASSWORD: ${{ secrets.SA_PASSWORD }}
    steps:
      #Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      #Debugging
      - name: Debug deploy path
        run: |
            echo "Current directory: $(pwd)"
            ls -l
            ls -l src
            ls -l ../
      - name: Debug GitHub workspace
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          ls -l $GITHUB_WORKSPACE
      - name: Find docker-compose.yml
        run: find $GITHUB_WORKSPACE -name docker-compose.yml
      #Deploy
      - name: Deploy services
        run: |
          cd $GITHUB_WORKSPACE
          docker compose -f ./docker-compose.yml build
          IMAGE_TAG=$IMAGE_TAG docker compose -f ./docker-compose.yml up -d